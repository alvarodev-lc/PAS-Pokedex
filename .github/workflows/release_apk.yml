name: Build & Publish Release APK

env:
  main_project_module: pokedex
  playstore_name: TeamDex

on:
  push:
    branches: [ master ]

jobs:
  Gradle:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Current Date As Env Variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set Repository Name As Env Variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Create Google Services JSON File
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON | base64 -di > ./pokedex/google-services.json

      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Decode Keystore
        run: |
          echo ${{ secrets.SIGNING_KEY }} > keystore-b64.txt
          base64 -d keystore-b64.txt > pokedex/${{ secrets.SIGNING_KEY_STORE_PATH }}

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build Release APK
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: |
          ./gradlew assembleRelease

      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        env:
          SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      - name: Set Dist Version
        run: |
          BUILD_NUMBER="${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}"
          echo "${BUILD_NUMBER}"
          VERSION="$(mvn -q -U -Dexpression=project.build.finalName help:evaluate -DforceStdout=true -DbuildNumber=${BUILD_NUMBER})"
          echo "DIST_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Read Tag Version from Markdown File
        id: read_tag_version
        run: echo "::set-output name=tag_version::$(cat TAG_VERSION.md)"

      - name: Create Tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${{ steps.read_tag_version.outputs.tag_version }}`,
              sha: context.sha
            })

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.read_tag_version.outputs.tag_version }}
          release_name: Release ${{ steps.read_tag_version.outputs.tag_version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/release/pokedex-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload app bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/bundle/release/pokedex-release.aab
          asset_name: pokedex-release.aab
          asset_content_type: application/vnd.android.package-archive
